---

include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v0.0.1"
    file:
      # TODO: Sphinx docs inherits a stage definition from upstream,
      # has to be included before our default stages to avoid trouble.
      - "jobs/sphinx-docs.yaml"
      - "defaults/souvap-workflow.yaml"
      - "defaults/stages.yaml"
      - "templates/kaniko.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/lint-pre-commit.yaml"


build-ucs-base-matrix:
  stage: build
  extends: .kaniko
  needs: []
  parallel:
    matrix:
      - UCS_VERSION:
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
  variables:
    KANIKO_BUILD_CONTEXT: "docker"
    APT_REPOSITORY: "http://updates.software-univention.de/"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ucs-base-${UCS_VERSION}"
    KANIKO_ARGS:
      --build-arg UCS_VERSION=${UCS_VERSION}
      --build-arg APT_REPOSITORY=${APT_REPOSITORY}
      --target final


test-ucs-base-usage-example:
  stage: build
  extends: .kaniko
  needs:
    - job: build-ucs-base-matrix
      artifacts: true
  variables:
    UCS_VERSION: 505
    KANIKO_BUILD_CONTEXT: "docker"
    DOCKERFILE_PATH: "docker/Dockerfile.usage-example"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ucs-base-usage-example"
    KANIKO_CACHE_ARGS: ""
    KANIKO_ARGS: >-
      --no-push
      --build-arg UCS_BASE_IMAGE_TAG=${BUILD_VERSION}


build-ucs-base-dev-matrix:
  stage: build
  extends: .kaniko
  needs:
    - job: build-ucs-base-matrix
      artifacts: true
  parallel:
    matrix:
      - UCS_VERSION:
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
  variables:
    APT_REPOSITORY: "http://updates.knut.univention.de/"
    KANIKO_BUILD_CONTEXT: "docker"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ucs-base-dev-${UCS_VERSION}"
    KANIKO_ARGS:
      --build-arg UCS_VERSION=${UCS_VERSION}
      --build-arg APT_REPOSITORY=${APT_REPOSITORY}
      --target dev

build-ucs-base-test-dev-matrix:
  stage: build
  extends: .kaniko
  needs:
    - job: build-ucs-base-matrix
      artifacts: true
  parallel:
    matrix:
      - UCS_VERSION:
          - 510
          - 520
  variables:
    APT_REPOSITORY: "http://updates-test.software-univention.de/"
    KANIKO_BUILD_CONTEXT: "docker"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ucs-base-test-${UCS_VERSION}-dev"
    KANIKO_ARGS:
      --build-arg UCS_VERSION=${UCS_VERSION}
      --build-arg APT_REPOSITORY=${APT_REPOSITORY}
      --target final


test-ucs-base-dev-usage-example:
  stage: build
  extends: .kaniko
  needs:
    - job: build-ucs-base-dev-matrix
      artifacts: true
  variables:
    UCS_VERSION: 505
    KANIKO_BUILD_CONTEXT: "docker"
    DOCKERFILE_PATH: "docker/dev.Dockerfile.usage-example"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ucs-base-dev-usage-example"
    KANIKO_CACHE_ARGS: ""
    KANIKO_ARGS:
      --no-push
      --build-arg UCS_BASE_IMAGE_TAG=${BUILD_VERSION}

changelog:
  image:
    name: orhunp/git-cliff:latest
    entrypoint: [""]
  variables:
    GIT_STRATEGY: clone # clone entire repo instead of reusing workspace
    GIT_DEPTH: 0 # avoid shallow clone to give cliff all the info it needs
  stage: package
  script:
    - git-cliff -r . > CHANGELOG.md
  artifacts:
    paths:
      - CHANGELOG.md

release:
  # TODO: Make a base image for this tool
  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:18-buster-slim"
  stage: package
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/changelog conventional-changelog-conventionalcommits
  script:
    - semantic-release
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

...
